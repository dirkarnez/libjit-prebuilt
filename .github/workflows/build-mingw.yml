name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'

jobs:
  build:
    name: Create Release
    runs-on: windows-2019
    env:
      libraryName: libjit
      installationPath: libjit-installation
      tagName: v0.1.4 # target tag
      mingwTargetZip: libjit-${{ github.ref_name }}-x86_64-posix-seh-rev0-8.1.0.zip
    steps:
      - uses: actions/checkout@v3
      
      - name: git clone
        shell: cmd
        run: git clone --recursive https://git.savannah.gnu.org/git/libjit.git && cd libjit && git checkout ${{ env.tagName }}
      
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: make autoconf automake libtool autogen perl bison flex mingw-w64-x86_64-pkg-config
          
      - name: curl x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        shell: cmd
        run:  cd /d ${{ github.workspace }} && curl https://github.com/2641797006/c/blob/master/GCC-zip/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z?raw=true -L --output x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z && dir && 7z.exe x x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
     
#       - name: git clone pkg-config
#         shell: cmd
#         run: git clone --recursive https://github.com/dirkarnez/pkg-config-action.git && xcopy /E /H /Y /C "${{ github.workspace }}\pkg-config-action\*" "${{ github.workspace }}\mingw64\bin" && cd /d "${{ github.workspace }}\mingw64\bin" && pkg-config.exe --version
        
      - name: set PATH, check mingw version, build and install
        shell: msys2 {0}
        run: |
            export PATH="${{ github.workspace }}/mingw64:${{ github.workspace }}/mingw64/bin:${{ github.workspace }}/msys64/usr/bin:/usr/bin" &&
            cd libjit && g++ --version && ./bootstrap mingw64 -static --prefix="$(pwd)/${{ env.installationPath }}" && 
            make && make install
            
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "${{ github.workspace }}/libjit/${{ env.installationPath }}"
          filename: "${{ env.mingwTargetZip }}"
        
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ github.workspace }}/libjit/${{ env.installationPath }}/${{ env.mingwTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
